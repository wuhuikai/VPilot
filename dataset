#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from deepgtav.messages import Start, Stop, Dataset, frame2numpy, Scenario
from deepgtav.client import Client

import argparse
import time
import cv2
import os

# Stores a dataset file with data coming from DeepGTAV
if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Collect driving data from GTAV')
    parser.add_argument('-l', '--host', default='localhost', help='The IP where DeepGTAV is running')
    parser.add_argument('-p', '--port', default='8000', help='The port where DeepGTAV is running')
    parser.add_argument('-d', '--dataset_path', default='checkpoints', help='Place to store the dataset')
    parser.add_argument('--location', nargs='+', type=float, default=None, help='Start location, [x, y]')
    parser.add_argument('--time', nargs='+', type=int, default=None, help='Start time, [hour, minute]')
    parser.add_argument('--weather', default=None, help='Weather type')
    parser.add_argument('--speed', type=float, default=175, help='Speed')
    parser.add_argument('--cameraYaw', type=float, default=0, help='Camera yaw in degree')
    parser.add_argument('--n_frames', type=int, default=10000, help='# of frames to collect')
    args = parser.parse_args()

    args.dataset_path = os.path.join(args.dataset_path, '{}_TIME[{}]_YAW[{}]_X[{}]_Y[{}].pz'.format(
        args.weather, args.time[0], args.cameraYaw, args.location[0], args.location[1]))
    # Creates a new connection to DeepGTAV using the specified ip and port.
    # If desired, a dataset path and compression level can be set to store in memory all the data received in a gziped pickle file.
    client = Client(ip=args.host, port=args.port, datasetPath=args.dataset_path, compressionLevel=9)
    
    # Configures the information that we want DeepGTAV to generate and send to us. 
    # See deepgtav/messages.py to see what options are supported
    dataset = Dataset(rate=5, frame=[320, 160], throttle=True, brake=True, steering=True, vehicles=True,
        peds=True, direction=None, speed=True, yawRate=True, location=True, time=True)
    # Send the Start request to DeepGTAV.
    scenario = Scenario(
        location = args.location,           #[x, y]
        time = args.time,                   #[hour, minute]
        weather = args.weather,             #string
        vehicle = "voltic",                 #string
        drivingMode = [786603, args.speed], #[mode, speed]
        cameraYaw = args.cameraYaw)         #float
    client.sendMessage(Start(dataset=dataset,scenario=scenario))

    # Start listening for messages coming from DeepGTAV.
    frames_left = args.n_frames
    while frames_left > 0:
        try:
            # We receive a message as a Python dictionary
            message = client.recvMessage()
            frames_left -= 1
            
            # The frame is a numpy array and can be displayed using OpenCV or similar       
            # image = frame2numpy(message['frame'], (320,160))
            # cv2.imshow('img',image)
            # cv2.waitKey(-1)
        except KeyboardInterrupt:
            break
            
    # We tell DeepGTAV to stop
    client.sendMessage(Stop())
    client.close()
